(this.webpackJsonp=this.webpackJsonp||[]).push([[9],{1318:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return c}));n(17),n(4),n(3),n(1),n(12),n(10),n(22);var o=n(59),l=n(65);n(36);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/docs/editor-plugins.mdx"}});var r={_frontmatter:i},b=l.a;function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,l={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(o.b)(b,a({},r,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"editor-plugins"},"Editor Plugins"),Object(o.b)("hr",null),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Editor plugin still in development ")),Object(o.b)("p",null,"You can boost your developer experience with Hegel by editor integrations.\nHegel try to provide an editor support for: Types hints and Errors display."),Object(o.b)("p",null,"Plugins:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",a({parentName:"li"},{href:"#visual-studio-code"}),"Visual Studio Code"))),Object(o.b)("h2",{id:"visual-studio-code"},"Visual Studio Code"),Object(o.b)("p",null,"You can install by ",Object(o.b)("a",a({parentName:"p"},{href:"/hegel/"}),"Visual Studio Code Market")," or manualy."),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-bash"}),"$ git clone https://github.com/JSMonk/hegel\n$ cd hegel/packages/language-server\n$ npm run complie\n$ code --install-extension ./hegel-plugin.vsix\n")),Object(o.b)("h2",{id:"debug-plugin"},"Debug plugin"),Object(o.b)("p",null,"If you interested in debugging the plugin then you need to:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Clone repo")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-bash"}),"$ git clone https://github.com/JSMonk/hegel\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Open hegel/packages/language-server in Visual Studio Code")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Go to the "Run and Debug" section')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Run "Extension" option'))))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/docs/editor-plugins.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-docs-editor-plugins-mdx-66d162e5e185a172e85a.js.map